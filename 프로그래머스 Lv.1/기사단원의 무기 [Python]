def number_of_divisors(num):
    count = 0
    divisor = 1
    while divisor * divisor < num:
        if num % divisor == 0:
            count += 2   # 약수가 발견될 때마다 count를 2 증가시킴 (약수는 쌍으로 존재하기 때문)
        divisor += 1
    
    if divisor * divisor == num:   # 제곱근이 정수인 경우 중복 약수로 처리되므로 count에 1 추가
        count += 1
    
    return count


def solution(number, limit, power):
    steel_weight = 0

    for knight_idx in range(1, number + 1):
        attack_power = number_of_divisors(knight_idx)   # 기사의 공격력은 약수 개수로 계산
        
        if limit < attack_power:   # 공격력 제한을 초과하는 경우 power 값으로 대체
            attack_power = power
        
        steel_weight += attack_power   # 철의 무게에 공격력 추가
        
    return steel_weight
